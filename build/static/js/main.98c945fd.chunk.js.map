{"version":3,"sources":["components/logo.png","components/Navigation.js","components/form/Form.js","components/signin/Signin.js","components/Profile.js","components/register/Register.js","components/faceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","padding","className","src","logo","height","width","onClick","Form","onInputChange","onButtonSubmit","type","onChange","Signin","state","signInEmail","signInPassword","onEmailChange","e","setState","target","value","onPasswordChange","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","password","then","console","log","response","json","user","id","props","loadUser","this","htmlFor","name","Component","Profile","entries","Register","onNameChange","onSubmitRegister","FaceRecognition","imageUrl","celebrityName","percentage","Math","round","alt","hight","initialState","input","undefined","route","joined","App","data","showResult","outputs","regions","concepts","count","Object","assign","catch","err","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98c945fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b485b2db.png\";","import React from 'react'\nimport logo from './logo.png'\n\nexport default function Navigation({onRouteChange, isSignedIn}) {\n        if(isSignedIn){\n            return(\n              <nav style={{display: 'flex', justifyContent:'space-between', padding:'20px'}}>\n                <img className='link din black pa3 pointer'src={logo} style={{ height:'100px', width:'100px'}}/>\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim din black underline pa3 pointer'> Sign Out</p>\n              </nav>\n            )\n        }else{\n            return(\n              <nav style={{display: 'flex', justifyContent:'space-between', padding:'20px'}}>\n                <img className='link din black pa3 pointer'src={logo} style={{ height:'100px', width:'100px'}}/>\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim din black underline pa3 pointer'> Sign In</p>\n                <p onClick={() => onRouteChange('register')} className='f3 link dim din black underline pa3 pointer'> Register</p>\n              </nav>\n            )\n        }\n}\n\n","import React from 'react'\nimport './form.css'\n\nexport default function Form({ onInputChange, onButtonSubmit }) {\n    return (\n        <div>\n            <p className='f5'>\n              {'Input URL of picture'}\n            </p>\n            <div className=\"center\">\n              <div className='center pa1 br2'>\n                <input className='f4 pa2 w-70 center' type=\"text\" onChange = {onInputChange}/>\n                  <button className='w-30 grow f4 link ph3 pv2 dib white bg-green' onClick={onButtonSubmit}>Search</button>\n              </div>\n\n\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nclass Signin extends Component{\n\n    state ={\n        signInEmail:'',\n        signInPassword:''\n    }\n\n    onEmailChange = (e) => {\n        this.setState({signInEmail:e.target.value})\n    }\n\n    onPasswordChange = (e) => {\n        this.setState({signInPassword:e.target.value})\n    }\n\n    onSubmitSignIn = () => {\n        fetch('https://pacific-plateau-38966.herokuapp.com/signin',{\n            method:'post',\n            headers: {'content-Type':'application/json'},\n            body:JSON.stringify({\n                email:this.state.signInEmail,\n                password:this.state.signInPassword\n            })\n        })\n        .then(console.log(this.state.signInEmail, this.state.signInPassword))\n        .then(response => response.json())\n        .then(user => {\n            if(user.id){\n                this.props.loadUser(user)\n                this.props.onRouteChange('home')\n            }\n        })\n    }\n\n    render(){\n        const { onRouteChange} = this.props;\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                    <main className=\"pa4 black-80\">\n                      <div className=\"measure\">\n                          <fieldset id=\"sign_up\" className=\"ba b--transparent   ph0 mh0\">\n                          <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                          <div className=\"mt3\">\n                              <label className=\"db fw6 lh-copy f6\"   htmlFor=\"email-address\">Email</label>\n                              <input \n                                onChange ={this.onEmailChange} \n                                className=\"pa2 input-reset ba   bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"email\" \n                                name=\"email-address\"    \n                                id=\"email-address\" />\n                          </div>\n                          <div className=\"mv3\">\n                              <label className=\"db fw6 lh-copy f6\"   htmlFor=\"password\">Password</label>\n                              <input \n                                onChange ={this.onPasswordChange}  \n                                className=\"b pa2 input-reset ba   bg-transparent hover-bg-black hover-white   w-100\" \n                                type=\"password\" \n                                name=\"password\"    \n                                id=\"password\" />\n                          </div>\n                          </fieldset>\n                          <div className=\"\">\n                          <input \n                            onClick = {this.onSubmitSignIn}\n                            className=\"b ph3 pv2 input-reset ba b--black   bg-transparent grow pointer f6 dib\" \n                            type=\"submit\"   \n                            value=\"Sign in\" />\n                          </div>\n                          <div className=\"lh-copy mt3\">\n                          <p \n                            onClick ={() => onRouteChange('home')}\n                            className=\"f6 link dim black db pointer\">\n                            Register\n                          </p>\n                          </div>\n                      </div>\n                    </main>\n            </article>\n        )\n    }\n    \n}\n\nexport default Signin;\n","import React from 'react'\n\n const Profile = ({name,entries}) => {\n    return (\n        <div>\n            <div className='white f3'>\n                {`${name}, your current entry count is...`}\n            </div>\n            <div className='white f1'>\n                {entries}\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;\n","import React, {Component} from 'react'\n\nclass Register extends Component{\n\n    state = {\n        name:'',\n        email:'',\n        password:''\n    }\n\n    onNameChange = (e) => {\n        this.setState({name:e.target.value})\n    }\n\n    onEmailChange = (e) => {\n        this.setState({email:e.target.value})\n    }\n\n    onPasswordChange = (e) => {\n        this.setState({password:e.target.value})\n    }\n\n    onSubmitRegister= () => {\n        const {email, password, name} = this.state\n        fetch('https://pacific-plateau-38966.herokuapp.com/register',{\n            method:'post',\n            headers: {'content-Type':'application/json'},\n            body:JSON.stringify({\n                name,\n                email,\n                password\n            })\n        })\n        .then(response => response.json())\n        .then(user => {\n            if(user.id){\n                this.props.loadUser(user)\n                this.props.onRouteChange('home')\n            }\n        })\n    }\n    render(){\n    const {onRouteChange} = this.props;\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                    <main className=\"pa4 black-80\">\n                      <div className=\"measure\">\n                          <fieldset id=\"sign_up\" className=\"ba b--transparent   ph0 mh0\">\n                          <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                          <div className=\"mt3\">\n                              <label className=\"db fw6 lh-copy f6\"   htmlFor=\"name\">name</label>\n                              <input \n                                className=\"pa2 input-reset ba   bg-transparent hover-bg-black hover-white   w-100\" \n                                type=\"name\" \n                                name=\"name\" \n                                id=\"name\" \n                                onChange = {this.onNameChange}\n                              />\n                          </div>\n                          <div className=\"mt3\">\n                              <label className=\"db fw6 lh-copy f6\"   htmlFor=\"email-address\">Email</label>\n                              <input \n                                className=\"pa2 input-reset ba   bg-transparent hover-bg-black hover-white   w-100\" \n                                type=\"email\" \n                                name=\"email-address\"    \n                                id=\"email-address\"\n                                onChange = {this.onEmailChange}\n                              />\n                          </div>\n                          <div className=\"mv3\">\n                              <label className=\"db fw6 lh-copy f6\"   htmlFor=\"password\">Password</label>\n                              <input \n                                className=\"b pa2 input-reset ba   bg-transparent hover-bg-black hover-white   w-100\" \n                                type=\"password\" \n                                name=\"password\"    \n                                id=\"password\" \n                                onChange = {this.onPasswordChange}\n                              />\n                          </div>\n                          </fieldset>\n                          <div className=\"\">\n                          <input \n                            onClick = {this.onSubmitRegister}\n                            className=\"b ph3 pv2 input-reset ba b--black   bg-transparent grow pointer f6 dib\" \n                            type=\"submit\"   \n                            value=\"Register\" \n                          />\n                          </div>\n                      </div>\n                    </main>\n            </article>\n        )\n    }   \n}\n\nexport default Register\n","import React from 'react'\nimport './FaceRecognition.css'\n\nexport default function FaceRecognition({imageUrl,celebrityName,percentage}) {\n    return (\n        <div className='center'>\n          <div className=\"absolute mt2\">\n            <p className='celebrityName'>Name: {celebrityName}</p>\n            <p>Percentage: {Math.round(percentage)}%</p>\n            <img src={imageUrl} alt=\"face\" width=\"500px\" hight=\"auto\" />  \n          </div>\n        </div>\n    )\n}\n","import React, {Component} from 'react';\nimport Navigation from './components/Navigation'\nimport Form from './components/form/Form'\nimport Signin from './components/signin/Signin'\nimport Profile from './components/Profile'\nimport Register from './components/register/Register'\nimport './App.css';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition'\n\n\n// https://samples.clarifai.com/celebrity.jpeg\n\n const initialState = {\n  input:'',\n  imageUrl:undefined,\n  celebrityName:'',\n  percentage:'',\n  route:'signin',\n  isSignedIn:false,\n  user:{\n    id:'',\n    name:'',\n    email:'',\n    entries:0,\n    joined:''\n  }\n }\n\nclass App extends Component {\n\n  state = initialState;\n\n  loadUser = (data) => {\n    this.setState({user:{\n        id:data.id,\n        name:data.name,\n        email:data.email,\n        entries:data.entries,\n        joined:data.joined\n      }\n    })\n  }\n\n  showResult = (response) => {\n    this.setState({celebrityName:response.outputs[0].data.regions[0].data.concepts[0].name})\n    const percentage = (response.outputs[0].data.regions[0].data.concepts[0].value)*100\n   this.setState({percentage})\n  }\n\n  onInputChange = (e) => {\n    this.setState({input:e.target.value})\n  }\n\n  onButtonSubmit = () => {\n    if(this.state.input)\n    this.setState({imageUrl: this.state.input})\n      fetch('https://pacific-plateau-38966.herokuapp.com/imageurl',{\n        method:'post',\n        headers: {'content-Type':'application/json'},\n        body:JSON.stringify({\n          input:this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if(response){\n          fetch('https://pacific-plateau-38966.herokuapp.com/image',{\n            method:'put',\n            headers: {'content-Type':'application/json'},\n            body:JSON.stringify({\n              id:this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n            .catch(console.log)\n        }\n        this.showResult(response)\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState(initialState)\n    }else if(route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route})\n  }\n    \n\n  render() {\n    const { isSignedIn, imageUrl, celebrityName, percentage, route } = this.state;\n    return (\n      <div className=\"App\">\n       <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route==='home' ? \n          <>\n             <Profile name = {this.state.user.name} entries ={this.state.user.entries}/>\n             <Form onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n             {imageUrl === undefined ? \n              ''\n              :<FaceRecognition imageUrl={imageUrl} celebrityName={celebrityName} percentage={percentage}/>}\n          </>\n          : (\n            this.state.route === 'signin'\n              ?<Signin \n                onRouteChange={this.onRouteChange}\n                loadUser = {this.loadUser}\n               /> \n              :<Register \n                  onRouteChange={this.onRouteChange}\n                  loadUser = {this.loadUser}\n                /> \n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}